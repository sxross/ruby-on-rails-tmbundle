h1. Peepcode Script

h2. Introduction

Many many people's first introduction to Ruby on Rails was the 15 minute video from DHH showing how you create a blog application with Rails. Nearly everyone finished that video asking one question: what was that editor? It is awesome.

Let's take a stroll down memory lane. We pick up the action at the X minute mark:

[transition into a portion of the video that shows off TMs features, plus DHH saying "Whooops!"]

What is interesting, is that as fast as David is able to write his blog application, even with his detour demonstrating the now deleted scaffold command, he never uses any special TextMate extensions for Rails. He uses some HTML snippets and commands and some Ruby snippets and commands. The original Ruby on Rails extensions were in their infancy.

[Open Bundle Editor] A collection of TextMate extensions is called a "bundle".

When working with Rails with TextMate you'll use several "bundles":

* HTML
* Ruby
* Ruby on Rails
* JavaScript

You might also use the ProtoType, jQuery or other JavaScript bundle if you use those libraries.

Ruby on Rails 2.0 was recently released and includes many improvements to
* the syntax that you type [<code>redirect_to :action => 'show', :id => @person</code> became <code>redirect_to @person</code>]
* changes to some file extensions [rhtml -> html.erb] and
* changes to some file name conventions [user_controller.rb -> users_controller.rb, more commonly].

The Ruby on Rails bundle has also been given a major upgrade to match all the changes for developing Rails 2.0 applications.

The snippets and commands we're going to look at are actually described across all three bundles. Often it is the Rails bundle that reuses the HTML and Ruby bundles. For example, in an HTML file you have a variety of ways to create new elements. [examples] Within an html.erb file you can reuse all the same snippets and commands.


h2. Know thy Editor

Overview key icons (see PeepCode TM video)

Preferences > Advanced > Folder References > Folder Patterns: add 'vendor/rails' and it will ignore that folder in any project - both from the Dock and from Search.

h2. Models and Migrations

* Create new app
* Go to app/controllers/application.rb (need a Ruby on Rails file)
* ^| + 1 - Call Generate Script - create new model "Post"  TODO - not working @ moment
  OR CLI:script/generate model Post title:string
* Go to migration file: Cmd+T + 001
* t. - list of available sexy migration columns; when selecting one, another t. is automatically created for you. (create body:text + published:boolean)
* Shft+^+K - remove a line
* CLI:script/generate model Comment
* Cmd+T + 002 - comment migration + add t.references :post, body:text, name:string
* Ctrl+| + 3 - run migrations
  * See error?
  * In terminal, go to "/Applications/TextMate.app/Contents/SharedSupport/Support/lib" and rename/remove Builder.rb
  * Run migrations again

* Go to post.rb
  * hm + comments; notice you can tab across to change fields if required
* Go to comments.rb
  * bt + post
  * vp + name, body
  * *

h2. Testing



h2. Controllers and Routing



h2. Views


h2. Extending